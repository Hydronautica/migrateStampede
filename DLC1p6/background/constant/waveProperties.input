/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.5                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      environmentalProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
#include "../myVars" //Include global variables
seaLevel	-0.20;
seaLevelAsReference true;
// A list of the relaxation zones in the simulation. The parameters are given
// in <name>Coeffs below.
relaxationNames (inlet); //outlet);

initializationName inlet;
externalForcing oceanWave3D;


externalForcingCoeffs
{
    waveType oceanWave3D;

    // Define the intervals for the OpenFoam calculations
    nIntervals 1;
    startTimes nonuniform List<scalar> 1(100);
    endTimes nonuniform List<scalar> 1( 600 );

    // Should the interval be ramped?
    rampInterval yes;
    Tsoft	5;
    // Name of the sub-dictionary (without Coeffs), where the externalSource
    // definition is given. Is needed, when the mapping OCW3D->OpenFoam is
    // carried out.
    mappingZone inlet;

    translateOpenFoamMesh (1000 250 0);
};

inletCoeffs
{
    waveType externalSource;
    
    relaxationZone
    {
        relaxationScheme Spatial;

        relaxationShape Cylindrical;
	centre (135 125 0);
	rInner 150;
	rOuter 650;
	
    }
};
// Enable or disable relaxation via passive or OW3D solution
/*
outletCoeffs
{
    waveType externalSource;

    relaxationZone
    {
        relaxationScheme Offshorewind;
        relaxationShape  Rectangular;

        relaxType   OUTLET;
        startX      (#calc "$xmax-$out_len" 0 $zmin);
        endX        ($xmax 0 #calc"2.0*$wave_height");
        orientation      (1.0 0.0 0.0);
    }
};*/






// ************************************************************************* //
